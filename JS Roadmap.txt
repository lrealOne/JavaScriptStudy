=> Operadores
     (Lógicos e matematicos == 028, 103)
     -Variáveis e Constantes     
     (Estruturas de dados == 169, 000)
     -Tipos de dados
     (Condicionais == 103, 164)  
     -Laços de Repetição (for e Whiles)

=> DOM - Document Object Model
     -Seletores
     -Maninupular o CSS (através do JS)
     -Eventos
     -array ( map, filter, reduce, sort)
     -Funções

=> Dicas de Projetos
     -Cronometro
     -Lista de Tarefas
     -Calculadora

=> Programação Assíncrona
     -Fetch
     -Promises
     -Async/await

----------------------------------------------------------------

**** Operadores:

- aritméticos;
- atribuição;
- relacional;
- lógicos;
- ternário.


Aritmeticos

5 + 2 = 7
5 - 2 = 3
5 * 2 = 10
5 / 2 = 2.5
5 % 2 = 1 (resto da divisão)
5 * 2 = 25 (potenciação)

========================

Ordem de precedencia 
1= ()
2= **
3= * / %
4= + -

======================

Atribuição
 var n = 3

 n = n+4   | n += 4
 n = n-4   | n -= 4
 n = n*4   | n *= 4
 n = n/2   | n /= 2     
 n = n**2  | n **= 2
 n = n%5   | n %= 5

***Incremento

 n=n+1  |  n++
 n=n-1  |  n--
=======================

Relacionais

 2 >  2   false
 3 <  6   true
 4 >= 7   false
 5 <= 8   true
 6 == 6   true
 7 != 20  true
---------------
identidade

 5 == 5 = t
 5 == '5' = t (iguais, mesmo valor)
 5 === '5' = f (identicos, mesmo valor e tipo)


=======================

Logicos 

! negação      ( not )
&& conjunção   ( and )
|| disjunção   ( or )

=======================

Ternario 

? positivo (true)
! negativo (false)

=======================
sintaxes**

Condicionais 

if, else if and else

if (condição) {
     ação;
} else if (condição) {
     ação;
} else {
     ação;
}
-------------------------------

if simplificado (ternario):

console.log(true ? 'caso positivo' ! 'caso negativo')

exemplo:

var idade = 21;

console.log(idade >= 18 ? 'maior de idade' ! 'menor de idade');

============================================

switch case 

switch(nomeDaVariavel) {
     case 'caso 1':
          console.log('execute caso 1);
          break;
     
     case 'caso 2':
          console.log('executa caso 2');
          break;
     
     default:
          console.log('Caso nenhum dos cases tenha sido encontrado');
          break;
}

multicase:

switch(nomeDaVariavel) {
     case 'caso 1':
     case 'case 2':
     case 'case 3':
          console.log('execute caso 1);
          break;
     
     case 'caso 4':
     case 'caso 5':
     case 'caso 6':
          console.log('executa caso 2');
          break;
     
     default:
          console.log('Caso nenhum dos cases tenha sido encontrado');
          break;
}

========================================

Array (listas)

var nome_do_array = [2, 3, 5, 6, 7, 'pessoa', true]

(nome_do_array[index]) => acessa index definido

(nome_do_array.lenght) => retorna a qtd de itens no array

(nome_do_array.pop) => retorna o ultimo item da lista [-1]

(nome_do_array.slice(primeiro indice, fim do intervalo + 1)) => o pedaço do intervalo 

(nome_do_array.join('caractere')) => separa os itens pelo caractere escolhido

(nome_do_array.push(valor)) => adiciona valor selecionado no fim da lista [-1]

(nome_do_array.includes(valor)) => retorna se o valor esta na lista (true, false)

(nome_do_array.indexof(valor)) => retorna o index do valor, caso não esteja na lista retorna -1

var resultado = array1.concat(array2).concat(array3) => mescla os arrays na ordem

([...array1, array2]) => outra maneira de mesclar







































*** DOM Document Object Model

- Interface de programação para HTML;
- Temos metodos para acessar a arvore de elementos;
- Fornece uma cópia do HTML;
- Manipulamos eventos pelo DOM para afetar o HTML.
------------------------

 


